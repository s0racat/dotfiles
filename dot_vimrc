" Set 'nocompatible' to ward off unexpected things that your distro might
" have made, as well as sanely reset options when re-sourcing .vimrc
set nocompatible

" Attempt to determine the type of a file based on its name and possibly its
" contents. Use this to allow intelligent auto-indenting for each filetype,
" and for plugins that are filetype specific.
if has('filetype')
  filetype indent plugin on
endif

" Enable syntax highlighting
if has('syntax')
  syntax on
endif

" One such option is the 'hidden' option, which allows you to re-use the same
" window and switch from an unsaved buffer without saving it first. Also allows
" you to keep an undo history for multiple files when re-using the same window
" in this way. Note that using persistent undo also lets you undo in multiple
" files even in the same window, but is less efficient and is actually designed
" for keeping undo history after closing Vim entirely. Vim will complain if you
" try to quit without saving, and swap files will keep you safe if your computer
" crashes.
set hidden

" Better command-line completion
set wildmenu

" Show partial commands in the last line of the screen
set showcmd

" Highlight searches (use <C-L> to temporarily turn off highlighting; see the
" mapping of <C-L> below)
set hlsearch

" Use case insensitive search, except when using capital letters
set ignorecase
set smartcase

" Allow backspacing over autoindent, line breaks and start of insert action
set backspace=indent,eol,start

" When opening a new line and no filetype-specific indenting is enabled, keep
" the same indent as the line you're currently on. Useful for READMEs, etc.
set autoindent

" Stop certain movements from always going to the first character of a line.
" While this behaviour deviates from that of Vi, it does what most users
" coming from other editors would expect.
set nostartofline

" Display the cursor position on the last line of the screen or in the status
" line of a window
set ruler

" Always display the status line, even if only one window is displayed
set laststatus=2

" Instead of failing a command because of unsaved changes, instead raise a
" dialogue asking if you wish to save changed files.
set confirm

" Use visual bell instead of beeping when doing something wrong
set visualbell

" And reset the terminal code for the visual bell. If visualbell is set, and
" this line is also included, vim will neither flash nor beep. If visualbell
" is unset, this does nothing.
set t_vb=

" Set the command window height to 2 lines, to avoid many cases of having to
" "press <Enter> to continue"
set cmdheight=2

" Quickly time out on keycodes, but never time out on mappings
set notimeout ttimeout ttimeoutlen=200

" Use <F2> to toggle between 'paste' and 'nopaste'
set pastetoggle=<F2>

" Indentation settings for using 4 spaces instead of tabs.
" Do not change 'tabstop' from its default value of 8 with this setup.
set shiftwidth=4
set softtabstop=4
set expandtab

" show cursorline
set cursorline

" https://vimblog.hatenablog.com/entry/vimrc_set_display_options
set showmatch      " 対応する括弧を強調表示
set helpheight=999 " ヘルプを画面いっぱいに開く
set list           " 不可視文字を表示
" 不可視文字の表示記号指定
set listchars=tab:▸\ ,eol:↲,extends:❯,precedes:❮

" https://vimblog.hatenablog.com/entry/vimrc_set_cursor_movement_options
set scrolloff=8                "上下8行の視界を確保
set sidescrolloff=16           " 左右スクロール時の視界を確保
set sidescroll=1               " 左右スクロールは一文字づつ行う

" https://vimblog.hatenablog.com/entry/vimrc_set_file_handling_options
set autoread "外部でファイルに変更がされた場合は読みなおす
set nobackup "ファイル保存時にバックアップファイルを作らない

" https://vimblog.hatenablog.com/entry/vimrc_set_search_replace_options
set incsearch "インクリメンタルサーチを行う

" https://vimblog.hatenablog.com/entry/vimrc_set_tab_indent_options
set smartindent "改行時に入力された行の末尾に合わせて次の行のインデントを増減する

" https://vimblog.hatenablog.com/entry/vimrc_set_cmdline_options
" コマンドラインモードでTABキーによるファイル名補完を有効にする
set wildmenu wildmode=list:longest,full
" コマンドラインの履歴を10000件保存する
set history=10000

" enable 256 color
set t_Co=256

" Set Background to dark
set background=dark

" https://qiita.com/KeitaNakamura/items/a289822827c8655b2dcd#%E7%B7%A8%E9%9B%86%E7%B3%BB
highlight clear CursorLineNr

" Display line numbers on the left
set number

" https://vimblog.hatenablog.com/entry/vimrc_key_mapping
nnoremap ; :

" https://vimblog.hatenablog.com/entry/vimrc_key_mapping_examples
nnoremap j gj
nnoremap k gk

" https://vimblog.hatenablog.com/entry/vimrc_key_mapping_examples
nnoremap n nzz
nnoremap N Nzz

" Map <C-L> (redraw screen) to also turn off search highlighting until the
" next search
" <CR> = <Enter>
nnoremap <C-L> :nohlsearch<CR><C-L>

" https://itchyny.hatenablog.com/entry/2014/12/25/090000
nnoremap Y y$
nnoremap + <C-a>
nnoremap - <C-x>

let mapleader = "\<Space>"

nnoremap <Leader>w :w<CR>
nnoremap <Leader>q :q<CR>
noremap <Leader><Leader> <C-w>w

" https://qiita.com/itmammoth/items/312246b4b7688875d023
cnoremap <C-p> <Up>
cnoremap <C-n> <Down>
cnoremap <C-b> <Left>
cnoremap <C-f> <Right>
cnoremap <C-a> <Home>
cnoremap <C-e> <End>
cnoremap <C-d> <Del>

" Good Bye arrow keys
" https://ja.stackoverflow.com/questions/1611/vivim%E3%81%A7%E5%AE%8C%E5%85%A8%E3%81%AB%E3%82%AB%E3%83%BC%E3%82%BD%E3%83%AB%E3%82%AD%E3%83%BC%E3%82%92%E7%84%A1%E5%8A%B9%E5%8C%96%E3%81%95%E3%81%9B%E3%81%9F%E3%81%84
" <nop> no operation
noremap  <Up>    <nop>
noremap  <Left>  <nop>
noremap  <Right> <nop>
noremap  <Down>  <nop>
"noremap! <Up>    <nop>
"noremap! <Left>  <nop>
"noremap! <Right> <nop>
"noremap! <Down>  <nop>
set termguicolors
nnoremap sy "+y$
