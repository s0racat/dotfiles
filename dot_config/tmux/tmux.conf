set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'nordtheme/tmux'
set -g @plugin "sainnhe/tmux-fzf"
TMUX_FZF_LAUNCH_KEY="f"

# set window split
bind-key v split-window -v
bind-key b split-window -h

set -g status-interval 1

# C-b is not acceptable -- Vim uses it
unbind-key C-b
set-option -g prefix C-s
bind-key c new-window
bind-key n next-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# resize window
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

set -g history-limit 10000
set -g default-terminal 'tmux-256color'
set -ga terminal-overrides ',tmux-256color:Tc:smcup@:rmcup@'
set-option -g status-position top
set-option -g focus-events on
set -g status-justify centre

set -g mouse on
setw -g mode-keys vi

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

if -b '[ ! -z $WAYLAND_DISPLAY ]' 'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "wl-copy && wl-paste -n | wl-copy -p"'
if -b '[ -z $WAYLAND_DISPLAY ]' 'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"'

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux/plugins'
if 'test ! -d ~/.local/share/tmux/plugins/tpm/.git' 'run "git clone https://github.com/tmux-plugins/tpm ~/.local/share/tmux/plugins/tpm && ~/.local/share/tmux/plugins/tpm/bin/install_plugins"'
if 'test -f ~/.local/share/tmux/plugins/tpm/tpm' 'run ~/.local/share/tmux/plugins/tpm/tpm'
